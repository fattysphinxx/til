1. 함수를 사용하는 이유
    반복적으로 사용되는 가치가 있는 부분을 한 뭉치로 묶어서 좀 더 가시성 있게 볼 수 있게 하기 때문이다.
    함수를 잘 사용한다면 프로그램의 흐름을 보다 쉽게 파악할 수 있게 되고, 오류가 발생했을 때에도 어디에서 오류가 발생했는지도 보다 쉽게 파악할 수 있게 된다.
    능력 있는 프로그래머는 함수를 저어엉말 잘 사용한다.

2. 클래스의 상속
    어떤 클래스를 만들 때 다른 클래스의 기능을 물려 받을 수 있다. 이것이 클래스의 상속이다.
    왜 상속을 해야 할까?
    보통 상속은 기존 클래스를 변경하지 않고 기능을 추가하거나 기존 기능을 변경하려고 할 때 사용한다.
    "클래스에 기능을 추가하고 싶으면 기존 클래스를 수정하면 되는데 왜 굳이 상속을 받아서 처리해야 하지?" 라는 의문이 들 수도 있다. 
    하지만 기존 클래스가 라이브러리 형태로 제공되거나 수정이 허용되지 않는 상황이라면 상속을 사용해야 한다.
    예)
    class Aclass:
        def __init__(self, a, b):
            self.a = a
            self.b = b
        def plus(self, a, b):
            c = self.a + self.b
            return c

        def minus(self, a, b):
            c = self.a - self.b
            return b
    
    class Bclass(Aclass):
        def div(self, a, b):
            c = self.a / self.b

    test = Bclass(6, 3)
    test.plus()
    ==> 9 
    test.div()
    ==> 2
    위와 같이 상속받은 Aclass의 기능과 Bclass의 기존 기능 모두 사용할 수 있음을 확인할 수 있다.
    상속은 Bclass처럼 기존 클래스(Aclass)는 그대로 놔둔 채 클래스의 기능을 확장시킬 때 주로 사용한다.



    3. map 함수 
        map 함수의 구조.
            map(function, iterable) 첫번째 매개변수로는 함수가 오고, 두번째 매개변수로는 반복 가능한 자료형(리스트,튜플 등)이 온다.

        map(int, input().split()) <== 앞으로 풀게 될 백준 알고리듬 문제에 자주 출몰함
            input은 입력된 값을 문자열로 인식해준다. 기본형 input()의 괄호 안에 아무것도 안 적으면, 공백의 입력란만 나온다.
            예제) "백준 1000번 사칙연산 문제
                a,b = map(int, input().split()) #인풋값을 1 2로 주면 공백을 기준으로 나누어 각 a와 b에 저장.
                print(a+b)


    4. input() 함수는 기본적으로 값을 받아 들이면, str 자료형으로 출력한다. 출력을 정수형으로 하고 싶으면,
        int(input()) 처럼 int() 함수로 감싸주어야한다.